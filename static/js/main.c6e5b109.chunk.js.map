{"version":3,"sources":["LocalStorage.js","ToDoReducer.js","GlobalContext.js","ToDoElement.js","ToDoList.js","ButtonColorData.js","ChangeColor.js","AlertCompnent.js","FormComponent.js","App.js","index.js"],"names":["getLocalStorage","item","list","localStorage","getItem","JSON","parse","TODO_ACTIONS","reducer","state","action","type","toDo","payload","title","filteredList","toDoList","filter","id","isEditing","editId","event","preventDefault","newToDoList","map","toDoElement","newElement","Date","toLocaleTimeString","concat","color","setItem","stringify","AppContext","React","createContext","initialToDoState","alert","variant","message","AppProvider","children","useReducer","dispatch","useEffect","Provider","value","handleAddToDoElement","handleDeleteToDoElement","handleSubmit","handleEditingToDoElement","handleColorChange","useGlobalContext","useContext","ToDoElement","props","textColor","elementIndex","element","Col","xs","md","Card","bg","style","Header","Body","Title","Button","onClick","ToDoList","colorList","ChangeColor","ButtonGroup","aria-label","size","className","index","AlertComponent","Alert","Heading","FormComponent","onSubmit","onChange","e","target","placeholder","App","Container","Row","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6e5b109.chunk.js","sourcesContent":["\r\n\r\nconst getLocalStorage =(item) => {\r\n    let list = localStorage.getItem(item) ;\r\n    if (list) {\r\n        return  JSON.parse(list);\r\n    }\r\n    return item===\"list\" ?[] : \"primary\"\r\n} ;\r\n\r\nexport default getLocalStorage;","\r\n\r\nexport const TODO_ACTIONS= {\r\n    ADD_TO_DO : \"add-to-do\",\r\n    EDIT_TO_DO : \"edit-to-do\",\r\n    DELETE_TO_DO : \"delete-to-do\",\r\n     SUBMIT_TO_DO : \"submit-to-do\",\r\n     CHANGE_COLOR: \"change-color\" ,\r\n     SAVE_LIST: \"save-list\",\r\n     SAVE_COLOR:\"save-color\",\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n switch (action.type) {\r\n     case TODO_ACTIONS.ADD_TO_DO:\r\n         return {...state , toDo:action.payload.title} ;\r\n\r\n\r\n\r\n     case TODO_ACTIONS.DELETE_TO_DO:\r\n         const filteredList = state.toDoList.filter((item)=> item.id !== action.payload.id);\r\n         return {...state , toDoList:filteredList ,toDo:''} ;\r\n\r\n\r\n\r\n     case TODO_ACTIONS.EDIT_TO_DO:\r\n         return {...state, isEditing:true , toDo:action.payload.title , editId:action.payload.id};\r\n\r\n\r\n\r\n     case TODO_ACTIONS.SUBMIT_TO_DO:\r\n         action.payload.event.preventDefault();\r\n         if(!state.toDo) {\r\n             //display alert\r\n             return {...state}\r\n         }\r\n         else if ( state.toDo && state.isEditing) {\r\n             const newToDoList = state.toDoList.map(toDoElement => {\r\n                 if(toDoElement.id === state.editId) {\r\n                     return {...toDoElement , title:state.toDo}\r\n                 }\r\n                 return {...toDoElement}\r\n             })\r\n             return {...state,toDoList: newToDoList }\r\n         }\r\n\r\n             const newElement = [{id:new Date().toLocaleTimeString() , title: state.toDo}] ;\r\n             return  {...state,toDoList:state.toDoList.concat(newElement) , toDo:''}\r\n\r\n     case TODO_ACTIONS.CHANGE_COLOR:\r\n         return {...state , color:action.payload.color} ;\r\n     case TODO_ACTIONS.SAVE_LIST:\r\n        localStorage.setItem('list' , JSON.stringify(state.toDoList)) ;\r\n        return {...state}\r\n\r\n\r\n     default: return {...state}\r\n }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default reducer;","\r\nimport React, { useContext, useEffect, useReducer} from 'react';\r\nimport getLocalStorage from \"./LocalStorage\";\r\n\r\nimport reducer from \"./ToDoReducer\";\r\nimport  {TODO_ACTIONS} from \"./ToDoReducer\";\r\n\r\nconst AppContext = React.createContext(null);\r\n\r\n\r\nconst initialToDoState ={\r\n    toDo: \"\" ,\r\n    toDoList: getLocalStorage(\"list\"),\r\n    isEditing: false,\r\n    alert:{variant:\"\" , message:\"\"} ,\r\n    editId: '',\r\n    color:getLocalStorage(\"color\"),\r\n}\r\n\r\n\r\nconst AppProvider = ({children})=> {\r\n    /*\r\n    const [toDo , setToDo] = useState('');\r\n    const [toDoList ,setToDoList] = useState(getLocalStorage(\"list\"));\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [alert ,setAlert] = useState( {variant:\"\" , message:\"\"}) ;\r\n    const [editId ,setEditId] = useState('');\r\n    const [color , setColor] =useState(getLocalStorage(\"color\")) ;\r\n     */\r\n\r\n    const [state,dispatch]= useReducer(reducer,initialToDoState) ;\r\n const handleAddToDoElement = (title)=> {\r\n     dispatch({type:TODO_ACTIONS.ADD_TO_DO , payload: {title}})\r\n }\r\n const handleDeleteToDoElement = (id) =>{\r\n     dispatch({type:TODO_ACTIONS.DELETE_TO_DO , payload: {id}})\r\n    } ;\r\n const handleEditingToDoElement = ( title, id) => {\r\n     dispatch({\r\n         type:TODO_ACTIONS.EDIT_TO_DO ,\r\n         payload :{\r\n             title ,\r\n             id},\r\n\r\n     })\r\n\r\n } ;\r\n\r\n const handleSubmit =(event) => {\r\ndispatch({type:TODO_ACTIONS.SUBMIT_TO_DO , payload:{event}})\r\n }\r\n const handleColorChange = (color) => {\r\n     dispatch({type:TODO_ACTIONS.CHANGE_COLOR , payload: {color}} )\r\n }\r\n\r\n    useEffect(()=> {\r\n        dispatch({type:TODO_ACTIONS.SAVE_LIST}) ;\r\n    }, [state.toDoList]) ;\r\n    useEffect(()=> {\r\n     localStorage.setItem('color' , JSON.stringify(state.color)) ;\r\n }, [state.color])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <AppContext.Provider value={{\r\n            ...state,\r\n            handleAddToDoElement,\r\n            handleDeleteToDoElement,\r\n            handleSubmit,\r\n            handleEditingToDoElement,\r\n            handleColorChange\r\n           }}>\r\n            {children}\r\n\r\n        </AppContext.Provider>\r\n    )\r\n\r\n}\r\n\r\nexport const useGlobalContext =()=> {\r\n    return useContext(AppContext);\r\n}\r\n\r\nexport {AppContext,AppProvider};\r\n\r\n","import {Button, Card, Col} from \"react-bootstrap\";\r\nimport {FaEdit, TiDeleteOutline} from \"react-icons/all\";\r\nimport {useGlobalContext} from \"./GlobalContext\";\r\n\r\n\r\nconst ToDoElement = (props) => {\r\n   const {color , handleEditingToDoElement,handleDeleteToDoElement} = useGlobalContext()\r\n    const textColor = (color===\"warning\"||color===\"light\") ? \"black\" : \"white\" ;\r\n    const elementIndex= props.elementIndex;\r\n    const element = props.element;\r\n\r\n    return (\r\n\r\n        <Col xs={6} md={4}>\r\n            <Card  bg={color} style={{color:textColor}}>\r\n                <Card.Header >{elementIndex+1}</Card.Header>\r\n                <Card.Body>\r\n                    <Card.Title>{element.title}</Card.Title>\r\n\r\n                </Card.Body>\r\n                <Button variant={color}\r\n                        onClick={()=>handleEditingToDoElement(element.title,element.id)}>\r\n                    <FaEdit></FaEdit>\r\n                </Button>\r\n                <Button variant={color}\r\n                        onClick={()=>handleDeleteToDoElement(element.id)}>\r\n                    <TiDeleteOutline></TiDeleteOutline>\r\n                </Button>\r\n            </Card>\r\n        </Col>\r\n\r\n    )\r\n};\r\n\r\nexport default ToDoElement ;","\r\nimport ToDoElement from \"./ToDoElement\";\r\nimport {useGlobalContext} from \"./GlobalContext\";\r\n\r\nconst ToDoList = ()=> {\r\n\r\nconst {toDoList } = useGlobalContext();\r\n\r\n    return (\r\n        toDoList.map((element,elementIndex )=> {\r\n            return <ToDoElement element={element}\r\n                                key={element.id}\r\n                                elementIndex={elementIndex}\r\n                               />\r\n        })\r\n    )\r\n\r\n}\r\n\r\nexport default ToDoList ;","\r\n\r\nconst colorList= [\r\n    'primary',\r\n    'secondary',\r\n    'success',\r\n    'danger',\r\n    'warning',\r\n    'info',\r\n    'light',\r\n    'dark',\r\n]\r\n\r\nexport default colorList;","import colorList from \"./ButtonColorData\";\r\nimport {Button, ButtonGroup} from \"react-bootstrap\";\r\nimport {useGlobalContext} from \"./GlobalContext\";\r\n\r\nconst ChangeColor = ()=> {\r\n\r\nconst {handleColorChange} = useGlobalContext();\r\n\r\n   return ( <ButtonGroup aria-label=\"coloring\" size=\"lg\" className=\"mb-2\" >\r\n           {\r\n               colorList.map((color,index)=> <Button variant={color}\r\n                                                     key={index}\r\n               onClick={()=>handleColorChange(color)}>....</Button> )\r\n\r\n           }\r\n\r\n    </ButtonGroup>\r\n   )\r\n\r\n}\r\n\r\nexport default ChangeColor;","import {Alert} from \"react-bootstrap\";\r\nimport {useGlobalContext} from \"./GlobalContext\";\r\n\r\n\r\nconst AlertComponent = ()=> {\r\nconst {alert} = useGlobalContext();\r\n\r\n    return (\r\n        <Alert variant={alert.variant} >\r\n            <Alert.Heading>\r\n                {alert.message}\r\n            </Alert.Heading>\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default AlertComponent ;\r\n","import {Button} from \"react-bootstrap\";\r\nimport {useGlobalContext} from \"./GlobalContext\";\r\n\r\n\r\nconst FormComponent = ()=> {\r\n    const {handleAddToDoElement , toDo , color , isEditing , handleSubmit} = useGlobalContext();\r\n\r\n    return (\r\n        <form  onSubmit={handleSubmit}>\r\n            <label > what is your plan ? </label>\r\n            <input type=\"text\" value={toDo}\r\n                   onChange={(e)=>handleAddToDoElement(e.target.value)}\r\n                   placeholder=\"e.g// Sunday : fishing\"\r\n            />\r\n            <Button type=\"submit\" variant={color}> {isEditing? \"edit\" : \"add element\"}</Button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default FormComponent;","import 'bootstrap/dist/css/bootstrap.min.css';\nimport { Col, Container, Row} from \"react-bootstrap\";\nimport ToDoList from \"./ToDoList\";\nimport ChangeColor from \"./ChangeColor\";\nimport AlertComponent from \"./AlertCompnent\";\nimport FormComponent from \"./FormComponent\";\n\n\n\n\nfunction App() {\n    return (\n        <Container>\n                <AlertComponent/>\n        <Row>\n            <Col>\n                <FormComponent/>\n            </Col>\n            <Col>\n                <ChangeColor />\n            </Col>\n        </Row>\n            <Row>\n                <ToDoList />\n            </Row>\n        </Container>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {AppProvider} from \"./GlobalContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <AppProvider>\n    <App />\n      </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}