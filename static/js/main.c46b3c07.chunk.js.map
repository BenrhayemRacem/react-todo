{"version":3,"sources":["LocalStorage.js","ToDoReducer.js","GlobalContext.js","ToDoElement.js","ToDoList.js","ButtonColorData.js","ChangeColor.js","AlertCompnent.js","FormComponent.js","App.js","index.js"],"names":["getLocalStorage","item","list","localStorage","getItem","JSON","parse","TODO_ACTIONS","reducer","state","action","type","toDo","payload","title","filteredList","toDoList","filter","id","alert","variant","message","isEditing","editId","event","preventDefault","newToDoList","map","toDoElement","newElement","Date","toLocaleTimeString","concat","color","setItem","stringify","AppContext","React","createContext","initialToDoState","AppProvider","children","useReducer","dispatch","useEffect","timeout","setTimeout","clearTimeout","Provider","value","handleAddToDoElement","handleDeleteToDoElement","handleSubmit","handleEditingToDoElement","handleColorChange","useGlobalContext","useContext","ToDoElement","props","textColor","elementIndex","element","Col","xs","md","Card","bg","style","Header","Body","Title","Button","onClick","ToDoList","colorList","ChangeColor","ButtonGroup","aria-label","size","className","index","AlertComponent","Alert","Heading","FormComponent","onSubmit","onChange","e","target","placeholder","App","Container","Row","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c46b3c07.chunk.js","sourcesContent":["\r\n\r\nconst getLocalStorage =(item) => {\r\n    let list = localStorage.getItem(item) ;\r\n    if (list) {\r\n        return  JSON.parse(list);\r\n    }\r\n    return item===\"list\" ?[] : \"primary\"\r\n} ;\r\n\r\nexport default getLocalStorage;","export const TODO_ACTIONS = {\r\n  ADD_TO_DO: \"add-to-do\",\r\n  EDIT_TO_DO: \"edit-to-do\",\r\n  DELETE_TO_DO: \"delete-to-do\",\r\n  SUBMIT_TO_DO: \"submit-to-do\",\r\n  CHANGE_COLOR: \"change-color\",\r\n  SAVE_LIST: \"save-list\",\r\n  SAVE_COLOR: \"save-color\",\r\n  INIT_ALERT : \"init-alert\"\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case TODO_ACTIONS.ADD_TO_DO:\r\n      return { ...state, toDo: action.payload.title };\r\n\r\n    case TODO_ACTIONS.DELETE_TO_DO:\r\n      const filteredList = state.toDoList.filter(\r\n        (item) => item.id !== action.payload.id\r\n      );\r\n      return { ...state, toDoList: filteredList, toDo: \"\" , alert:{ variant: \"danger\" , message: \"element deleted\"} };\r\n\r\n    case TODO_ACTIONS.EDIT_TO_DO:\r\n      return {\r\n        ...state,\r\n        isEditing: true,\r\n        toDo: action.payload.title,\r\n        editId: action.payload.id,\r\n      };\r\n\r\n    case TODO_ACTIONS.SUBMIT_TO_DO:\r\n      action.payload.event.preventDefault();\r\n      if (!state.toDo) {\r\n        // display alert\r\n        return { ...state , alert:{variant:\"danger\" , message:\"cannot add an empty string\"} };\r\n      } else if (state.toDo && state.isEditing) {\r\n        const newToDoList = state.toDoList.map((toDoElement) => {\r\n          if (toDoElement.id === state.editId) {\r\n            return { ...toDoElement, title: state.toDo };\r\n          }\r\n          return { ...toDoElement };\r\n        });\r\n        return { ...state, toDoList: newToDoList , alert:{ variant: \"success\" , message: \"element updated successfully\"} };\r\n      }\r\n\r\n      const newElement = [\r\n        { id: new Date().toLocaleTimeString(), title: state.toDo },\r\n      ];\r\n      return {\r\n        ...state,\r\n        toDoList: state.toDoList.concat(newElement),\r\n        toDo: \"\",\r\n        alert: {variant: \"success\" , message: \"element added successfully\"}\r\n      };\r\n\r\n    case TODO_ACTIONS.CHANGE_COLOR:\r\n      return { ...state, color: action.payload.color };\r\n    case TODO_ACTIONS.SAVE_LIST:\r\n      localStorage.setItem(\"list\", JSON.stringify(state.toDoList));\r\n      return { ...state };\r\n    case TODO_ACTIONS.INIT_ALERT:\r\n      return {...state, alert: {variant: \"\" , message: \"\"}}\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React, { useContext, useEffect, useReducer } from \"react\";\r\nimport getLocalStorage from \"./LocalStorage\";\r\n\r\nimport reducer from \"./ToDoReducer\";\r\nimport { TODO_ACTIONS } from \"./ToDoReducer\";\r\n\r\nconst AppContext = React.createContext(null);\r\n\r\nconst initialToDoState = {\r\n  toDo: \"\",\r\n  toDoList: getLocalStorage(\"list\"),\r\n  isEditing: false,\r\n  alert: { variant: \"\", message: \"\" },\r\n  editId: \"\",\r\n  color: getLocalStorage(\"color\"),\r\n};\r\n\r\nconst AppProvider = ({ children }) => {\r\n  /*\r\n    const [toDo , setToDo] = useState('');\r\n    const [toDoList ,setToDoList] = useState(getLocalStorage(\"list\"));\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [alert ,setAlert] = useState( {variant:\"\" , message:\"\"}) ;\r\n    const [editId ,setEditId] = useState('');\r\n    const [color , setColor] =useState(getLocalStorage(\"color\")) ;\r\n     */\r\n\r\n  const [state, dispatch] = useReducer(reducer, initialToDoState);\r\n  const handleAddToDoElement = (title) => {\r\n    dispatch({ type: TODO_ACTIONS.ADD_TO_DO, payload: { title } });\r\n  };\r\n  const handleDeleteToDoElement = (id) => {\r\n    dispatch({ type: TODO_ACTIONS.DELETE_TO_DO, payload: { id } });\r\n  };\r\n  const handleEditingToDoElement = (title, id) => {\r\n    dispatch({\r\n      type: TODO_ACTIONS.EDIT_TO_DO,\r\n      payload: {\r\n        title,\r\n        id,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    dispatch({ type: TODO_ACTIONS.SUBMIT_TO_DO, payload: { event } });\r\n  };\r\n  const handleColorChange = (color) => {\r\n    dispatch({ type: TODO_ACTIONS.CHANGE_COLOR, payload: { color } });\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: TODO_ACTIONS.SAVE_LIST });\r\n  }, [state.toDoList]);\r\n  useEffect(() => {\r\n    localStorage.setItem(\"color\", JSON.stringify(state.color));\r\n  }, [state.color]);\r\n  useEffect(()=> {\r\n    let timeout = setTimeout(()=>dispatch({type:TODO_ACTIONS.INIT_ALERT}) , 3000) ;\r\n    return ()=> clearTimeout(timeout)\r\n  }, [state.alert])\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        ...state,\r\n        handleAddToDoElement,\r\n        handleDeleteToDoElement,\r\n        handleSubmit,\r\n        handleEditingToDoElement,\r\n        handleColorChange,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useGlobalContext = () => {\r\n  return useContext(AppContext);\r\n};\r\n\r\nexport { AppContext, AppProvider };\r\n","import { Button, Card, Col } from \"react-bootstrap\";\r\nimport { FaEdit, TiDeleteOutline } from \"react-icons/all\";\r\nimport { useGlobalContext } from \"./GlobalContext\";\r\n\r\nconst ToDoElement = (props) => {\r\n  const { color, handleEditingToDoElement, handleDeleteToDoElement } =\r\n    useGlobalContext();\r\n  const textColor =\r\n    color === \"warning\" || color === \"light\" ? \"black\" : \"white\";\r\n  const elementIndex = props.elementIndex;\r\n  const element = props.element;\r\n\r\n  return (\r\n    <Col xs={6} md={4}>\r\n      <Card bg={color} style={{ color: textColor }}>\r\n        <Card.Header>{elementIndex + 1}</Card.Header>\r\n        <Card.Body>\r\n          <Card.Title>{element.title}</Card.Title>\r\n        </Card.Body>\r\n        <Button\r\n          variant={color}\r\n          onClick={() => handleEditingToDoElement(element.title, element.id)}\r\n        >\r\n          <FaEdit></FaEdit>\r\n        </Button>\r\n        <Button\r\n          variant={color}\r\n          onClick={() => handleDeleteToDoElement(element.id)}\r\n        >\r\n          <TiDeleteOutline></TiDeleteOutline>\r\n        </Button>\r\n      </Card>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default ToDoElement;\r\n","\r\nimport ToDoElement from \"./ToDoElement\";\r\nimport {useGlobalContext} from \"./GlobalContext\";\r\n\r\nconst ToDoList = ()=> {\r\n\r\nconst {toDoList } = useGlobalContext();\r\n\r\n    return (\r\n        toDoList.map((element,elementIndex )=> {\r\n            return <ToDoElement element={element}\r\n                                key={element.id}\r\n                                elementIndex={elementIndex}\r\n                               />\r\n        })\r\n    )\r\n\r\n}\r\n\r\nexport default ToDoList ;","\r\n\r\nconst colorList= [\r\n    'primary',\r\n    'secondary',\r\n    'success',\r\n    'danger',\r\n    'warning',\r\n    'info',\r\n    'light',\r\n    'dark',\r\n]\r\n\r\nexport default colorList;","import colorList from \"./ButtonColorData\";\r\nimport {Button, ButtonGroup} from \"react-bootstrap\";\r\nimport {useGlobalContext} from \"./GlobalContext\";\r\n\r\nconst ChangeColor = ()=> {\r\n\r\nconst {handleColorChange} = useGlobalContext();\r\n\r\n   return ( <ButtonGroup aria-label=\"coloring\" size=\"lg\" className=\"mb-2\" >\r\n           {\r\n               colorList.map((color,index)=> <Button variant={color}\r\n                                                     key={index}\r\n               onClick={()=>handleColorChange(color)}>....</Button> )\r\n\r\n           }\r\n\r\n    </ButtonGroup>\r\n   )\r\n\r\n}\r\n\r\nexport default ChangeColor;","import {Alert} from \"react-bootstrap\";\r\nimport {useGlobalContext} from \"./GlobalContext\";\r\n\r\n\r\nconst AlertComponent = ()=> {\r\nconst {alert} = useGlobalContext();\r\n\r\n    return (\r\n        <Alert variant={alert.variant} >\r\n            <Alert.Heading>\r\n                {alert.message}\r\n            </Alert.Heading>\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default AlertComponent ;\r\n","import { Button } from \"react-bootstrap\";\r\nimport { useGlobalContext } from \"./GlobalContext\";\r\n\r\nconst FormComponent = () => {\r\n  const { handleAddToDoElement, toDo, color, isEditing, handleSubmit } =\r\n    useGlobalContext();\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>what is your plan ? </label>\r\n      <input\r\n        type=\"text\"\r\n        value={toDo}\r\n        onChange={(e) => handleAddToDoElement(e.target.value)}\r\n        placeholder=\"e.g/ /\r\n                        Sunday\r\n              : fishing \"\r\n      />{\" \"}\r\n      <Button type=\"submit\" variant={color}>\r\n        {isEditing ? \"edit\" : \"add element\"}\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default FormComponent;\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Col, Container, Row} from \"react-bootstrap\";\r\nimport ToDoList from \"./ToDoList\";\r\nimport ChangeColor from \"./ChangeColor\";\r\nimport AlertComponent from \"./AlertCompnent\";\r\nimport FormComponent from \"./FormComponent\";\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <Container>\r\n                <AlertComponent/>\r\n        <Row>\r\n            <Col>\r\n                <FormComponent/>\r\n            </Col>\r\n            <Col>\r\n                <ChangeColor />\r\n            </Col>\r\n        </Row>\r\n            <Row>\r\n                <ToDoList />\r\n            </Row>\r\n        </Container>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {AppProvider} from \"./GlobalContext\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <AppProvider>\r\n    <App />\r\n      </AppProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}